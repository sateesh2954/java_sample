
# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
 
trigger:
- master
stages:
  - stage: Build
    displayName: Build Application
    pool:
     name: 'MyUbuntuAgentPool'
    jobs:
      - job: Build
        steps:
          - task: SonarQubePrepare@5
            inputs:
              SonarQube: 'sonarqube'
              scannerMode: 'Other'
              extraProperties: |
                # Additional properties that will be passed to the scanner,
                # Put one key=value per line, example:
                # sonar.exclusions=**/*.bin
                sonar.projectKey=sat_test
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              goals: 'package'
          - task: CopyFiles@2
            inputs:
              Contents: '**'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'
          - task: SonarQubePublish@5
            inputs:
              pollingTimeoutSec: '300'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'

- stages: dev
    displayName: deploy to the develop environment
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        pool:
         name: 'MyUbuntuAgentPool'
        environment: dev
        variables:
          - group: release
        strategy:
         runOnce:
            deploy:
               steps:
                 - download: current
                   artifact: drop
                 - task: AzureWebApp@1
                   inputs:
                     azureSubscription: 'ARM-SC'
                     appType: 'webAppLinux'
                     appName: 'test-app-dev'
                     package: '$(System.DefaultWorkingDirectory)/**/*.jar'
  - stages: QA
    displayName: deploy to the QA environment
    dependsOn: dev
    condition: succeeded()
    jobs:
      - deployment: Deploy
        pool:
         name: 'MyUbuntuAgentPool'
        environment: QA
        variables:
          - group: release
        strategy:
         runOnce:
            deploy:
               steps:
                 - download: current
                   artifact: drop
                 - task: AzureWebApp@1
                   inputs:
                     azureSubscription: 'ARM-SC'
                     appType: 'webAppLinux'
                     appName: 'test-app-qa'
                     package: '$(System.DefaultWorkingDirectory)/**/*.jar'
  - stages: staging
    displayName: deploy to the staging
    dependsOn: QA
    condition: succeeded()
    jobs:
      - deployment: Deploy
        pool:
         name: 'MyUbuntuAgentPool'
        environment: staging
        variables: 
          - group: release
        strategy:
         runOnce:
            deploy:
               steps:
                 - download: current
                   artifact: drop
                 - task: AzureWebApp@1
                   inputs:
                     azureSubscription: 'ARM-SC'
                     appType: 'webAppLinux'
                     appName: 'test-app-stage'
                     package: '$(System.DefaultWorkingDirectory)/**/*.jar'  
                  