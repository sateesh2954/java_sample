# Maven package Java project Web App to Linux on Azure
# Build your Java project and deploy it to Azure as a Linux web app
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '5e5d1c31-bccd-4a0b-90ca-58673001b468'

  # Web app name
  webAppName: 'sat-app-hcl'

  # Environment name
  environmentName: 'sat-app-hcl'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Analysis
  displayName: Code Analysis stage
  jobs:
  - job: SonarQubeScan
    displayName: Code Scan
    pool:
     name: MyUbuntuAgentPool

    steps:
    - task: SonarQubePrepare@5
      inputs:
        SonarQube: 'sonarqube'
        scannerMode: 'Other'
         projectKey: test
        
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool:
     name: MyUbuntuAgentPool

    steps:
    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployLinuxWebApp
    displayName: Deploy Linux Web App
    environment: $(environmentName)
    pool:
      name: MyUbuntuAgentPool
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: sat-app-hcl'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              package: '$(Pipeline.Workspace)/drop/**/target/*.?(war|jar)'